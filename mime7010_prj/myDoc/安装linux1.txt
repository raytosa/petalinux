sudo apt-get install -y gcc git make net-tools libncurses5-dev tftpd zlib1g-dev libssl-dev flex bison libselinux1 gnupg
sudo apt-get install -y wget diffstat chrpath socat xterm autoconf libtool tar unzip texinfo zlib1g-dev gcc-multilib
sudo apt-get install -y build-essential -dev
sudo apt-get install -y  zlib1g:i386 screen pax gzip
sudo apt-get install -y python gawk gcc git make net-tools libncurses5-dev tftpd zlib1g:i386 libssl-dev flex bison libselinux1 gnupg wget diffstat chrpath socat xterm autoconf libtool tar unzip texinfo zlib1g-dev gcc-multilib build-essential screen pax gzip
sudo apt-get install -y 
sudo apt-get install -y libtool-bin
./petalinux-v2020.2-final-installer.run --dir /aa/xilinx/petalinux/
sudo apt-get install ia32-libs

1.
sudo dpkg-reconfigure dash
sudo ./plnx-env-setup.sh
sudo apt-get install -y tftpd-hpa
service tftpd-hpa restart
2.
./Xilinx_Unified_2020.2_1118_1232_Lin64.bin
3.
source  /tools/Xilinx/PetaLinux/2020.2/tool/components/yocto/buildtools/environment-setup-x86_64-petalinux-linux
source  /tools/Xilinx/PetaLinux/2020.2/tool/settings.sh
----sudo nano /etc/bash.bashrc
4.
petalinux-create --type project --template zynq --name petalinux_prj
cd petalinux_prj
petalinux-config --get-hw-description=.
5.
petalinux-config -c u-boot
petalinux-config -c kernel
petalinux-config -c rootfs
6
设备树配置
             若要修改，直接在工程文件夹下，Ctr+F搜索.dts就可以找到相关文件，做出相应修改，暂时默认，不修改，按照它自动生成的设备树。
7

如果编译过程中出现异常 ， 下一次编译的时候最好用 petalinux-build -x mrproper 来清除一下 

petalinux-build

8
打包生成BIN文件
cd images/linux/
petalinux-package --boot --format BIN --fsbl zynqmp_fsbl.elf --u-boot  u-boot.elf --pmufw pmufw.elf --fpga *.bit
注意：当此目录下之前生成过BOOT.BIN，再次执行此操作时，在命令后要加上--force

petalinux-package --boot --format BIN --fsbl zynq_fsbl.elf --fpga system.bit --u-boot
petalinux-package --boot --fsbl zynqmp_fsbl.elf --u-boot
petalinux-package --boot --fsbl zynqmp_fsbl.elf --u-boot --fpga system.bit


3、将文件系统复制到 Ext4 分区
cp images/linux/rootfs.cpio   /media/xt500/Ext4_roofs 
cd /media/xt500/Ext4_roofs 
sudo apt-get install pax
sudo pax -rvf rootfs.cpio


上电并进入系统，在 “/mnt” 目录下建立文件夹 “udisk”，如果重启后文件夹还在，实验成功。
记得使用 shutdown 命令关机，不要硬掉电。

cd /mnt
mkdir udisk
shutdown -h now





编译完modules , 需要配置rootfs ， 这之后有一个比较重要的步骤 ， 
就是 petalinux-build -x package 来生成系统编译需要的Kconfig文件 

要操作DMA需要添加一个字符型的驱动 ， 同时还需要更改设备树源文件 ；
修改步骤如下 ： https://blog.csdn.net/long_fly/article/details/80482248






一、利用JTAG在硬件上启动petalinux镜像
①　把xilinx仿真器连接到虚拟机上。板子启动方式设为JTAG。以太网也接入本地局域网。
②　如下图，把工作目录切换到images/linux下。
③　使用petalinux-boot --jtag --fpga --bitstream petalinux_wrapper.bit即可通过JTAG下载bit流到板子上。
④　使用petalinux-boot --jtag --prebuilt 3即可把linux镜像下载到板子上。
使用了：system.dtb u-boot.elf zImage zynq_fsbl.elf


二、启动QEMU上的petalinux镜像
注意：使用QEMU和JTAG时，要先封装预建镜像，使用如下命令：
petalinux-package --prebuilt --fpga 
自动创建pre-built文件夹
启动QEMU上的petalinux镜像
petalinux-boot --qemu --prebuilt 3  或者
petalinux-boot --qemu --kernel

三、利用SD卡在硬件上启动petalinux镜像
将文件夹linux/images下的BOOT.BIN 和 image.ub 拷贝到SD卡的FAT32分区中。
设置启动方式为SD卡。

如果启动失败，提示找不到内核镜像。可能是bootcmd环境变量不正确。

四、使用TFTP启动硬件上的PETALINUX镜像
普通文件传输协议（TFTP）
TFTP 启动可节省大量时间，因为比 JTAG 启动快很多，而且不必为内核源中的每次更改都刷新镜像。
①　petalinux-boot --jtag --prebuilt 2
②　输入任意字符，使其停在UBOOT中。
③　print serverip 检查TFTP服务器IP地址
Zynq> print serverip
serverip=192.168.157.129
④　set serverip ; saveenv 设置主机的IP地址
Zynq> set serverip 10.113.214.140 ;saveenv
Saving Environment to FAT...
writing uboot.env
done
⑤　run netboot 启动内核

Zynq> run netboot
*** ERROR: `ipaddr' not set
1
2
针对这个error，使用如下命令：

Zynq> set ipaddr 10.113.214.205
Zynq> run netboot              
Using ethernet@e000b000 device
TFTP from server 10.113.214.252; our IP address is 10.113.214.205
Filename 'image.ub'.
Load address: 0x10000000
1
2
3
4
5
6
又会出现下面这个错误，是UBUNTU上的TFTP服务器还没有搭建。

Loading: T T T T T T T T T 
TFTP server died; starting again
1
2











六、tftp服务器搭建

apt-get install tftp-hpa tftpd-hpa
apt-get install xinetd
vim /etc/default/tftpd-hpa
修改以下两项：
TFTP_DIRECTORY="/tftpboot"
TFTP_OPTIONS="-s -c -l"

cd /
mkdir tftpboot
chmod 777 tftpboot/
service xinetd stop
service tftpd-hpa restart
service xinetd start
测试是否搭建成功：（提前在/tftpboot touch aaa，在本地touch 111）
tftp localhost
tftp> put 111
tftp> get aaa
tftp> q







七、nfs服务器搭建

apt-get install nfs-kernel-server
apt-get install nfs-common
vi /etc/exports
在文件末尾添加
/root/rootfs *(rw,sync,no_root_squash,no_subtree_check)

mkdir rootfs
chmod 777 rootfs/
exportfs -r
/etc/init.d/nfs-kernel-server restart
showmount localhost –e
测试是否成功：
mount -t nfs -o nolock localhost:/root/rootfs /mnt
